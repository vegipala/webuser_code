import { __decorate, __metadata } from "tslib";
import { Component, HostBinding, Input, ElementRef } from '@angular/core';
import * as ɵngcc0 from '@angular/core';

var _c0 = ["*"];
var SlideComponent = /** @class */ (function () {
    function SlideComponent(el) {
        this.animated = false;
        this.directionNext = false;
        this.directionLeft = false;
        this.directionPrev = false;
        this.directionRight = false;
        /** Wraps element by appropriate CSS classes */
        this.el = null;
        this.el = el;
    }
    SlideComponent.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        HostBinding('class.active'),
        Input(),
        __metadata("design:type", Boolean)
    ], SlideComponent.prototype, "active", void 0);
    __decorate([
        HostBinding('class.animated'),
        __metadata("design:type", Object)
    ], SlideComponent.prototype, "animated", void 0);
    __decorate([
        HostBinding('class.carousel-item-next'),
        __metadata("design:type", Object)
    ], SlideComponent.prototype, "directionNext", void 0);
    __decorate([
        HostBinding('class.carousel-item-left'),
        __metadata("design:type", Object)
    ], SlideComponent.prototype, "directionLeft", void 0);
    __decorate([
        HostBinding('class.carousel-item-prev'),
        __metadata("design:type", Object)
    ], SlideComponent.prototype, "directionPrev", void 0);
    __decorate([
        HostBinding('class.carousel-item-right'),
        __metadata("design:type", Object)
    ], SlideComponent.prototype, "directionRight", void 0);
    __decorate([
        HostBinding('class.carousel-item'),
        __metadata("design:type", Object)
    ], SlideComponent.prototype, "el", void 0);
    SlideComponent = __decorate([ __metadata("design:paramtypes", [ElementRef])
    ], SlideComponent);
SlideComponent.ɵfac = function SlideComponent_Factory(t) { return new (t || SlideComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
SlideComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SlideComponent, selectors: [["mdb-slide"], ["mdb-carousel-item"]], hostVars: 14, hostBindings: function SlideComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("animated", ctx.animated)("carousel-item-next", ctx.directionNext)("carousel-item-left", ctx.directionLeft)("carousel-item-prev", ctx.directionPrev)("carousel-item-right", ctx.directionRight)("carousel-item", ctx.el)("active", ctx.active);
    } }, inputs: { active: "active" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function SlideComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SlideComponent, [{
        type: Component,
        args: [{
                selector: 'mdb-slide, mdb-carousel-item',
                template: "\n    <ng-content></ng-content>\n  "
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { animated: [{
            type: HostBinding,
            args: ['class.animated']
        }], directionNext: [{
            type: HostBinding,
            args: ['class.carousel-item-next']
        }], directionLeft: [{
            type: HostBinding,
            args: ['class.carousel-item-left']
        }], directionPrev: [{
            type: HostBinding,
            args: ['class.carousel-item-prev']
        }], directionRight: [{
            type: HostBinding,
            args: ['class.carousel-item-right']
        }], el: [{
            type: HostBinding,
            args: ['class.carousel-item']
        }], active: [{
            type: HostBinding,
            args: ['class.active']
        }, {
            type: Input
        }] }); })();
    return SlideComponent;
}());
export { SlideComponent };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2xpZGUuY29tcG9uZW50LmpzIiwic291cmNlcyI6WyJuZzovYW5ndWxhci1ib290c3RyYXAtbWQvbGliL2ZyZWUvY2Fyb3VzZWwvc2xpZGUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7O0FBUTFFO0lBZ0JFLHdCQUFtQixFQUFjO1FBWEYsYUFBUSxHQUFHLEtBQUssQ0FBQztRQUNQLGtCQUFhLEdBQUcsS0FBSyxDQUFDO1FBQ3RCLGtCQUFhLEdBQUcsS0FBSyxDQUFDO1FBQ3RCLGtCQUFhLEdBQUcsS0FBSyxDQUFDO1FBQ3JCLG1CQUFjLEdBQUcsS0FBSyxDQUFDO1FBQ2pFLCtDQUErQztRQUl4QyxPQUFFLEdBQXFCLElBQUksQ0FBQztRQUdqQyxJQUFJLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQztJQUNmLENBQUM7O2dCQUZzQixVQUFVOztJQVpqQztRQUZDLFdBQVcsQ0FBQyxjQUFjLENBQUM7UUFDM0IsS0FBSyxFQUFFOztrREFDZTtJQUNRO1FBQTlCLFdBQVcsQ0FBQyxnQkFBZ0IsQ0FBQzs7b0RBQWtCO0lBQ1A7UUFBeEMsV0FBVyxDQUFDLDBCQUEwQixDQUFDOzt5REFBdUI7SUFDdEI7UUFBeEMsV0FBVyxDQUFDLDBCQUEwQixDQUFDOzt5REFBdUI7SUFDdEI7UUFBeEMsV0FBVyxDQUFDLDBCQUEwQixDQUFDOzt5REFBdUI7SUFDckI7UUFBekMsV0FBVyxDQUFDLDJCQUEyQixDQUFDOzswREFBd0I7SUFLakU7UUFIQyxXQUFXLENBQUMscUJBQXFCLENBQUM7OzhDQUdBO0lBZHhCLGNBQWMsZUFDZixTQVBYLFNBQVMsQ0FBQyxjQUNULFFBQVEsRUFBRSwzQ0FLSixrQ0FnQmlCLFVBQVU7T0FoQnRCLGNBQWMsQ0FtQjFCO0VBeEJ5QyxjQUN4QyxRQUFRLEVBQUUscUNBRVQsVUFDRixDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0JBcUJGO0lBREEscUJBQUM7Q0FBQSxBQW5CRCxJQW1CQztTQW5CWSxjQUFjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBIb3N0QmluZGluZywgSW5wdXQsIEVsZW1lbnRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbWRiLXNsaWRlLCBtZGItY2Fyb3VzZWwtaXRlbScsXG4gIHRlbXBsYXRlOiBgXG4gICAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxuICBgLFxufSlcbmV4cG9ydCBjbGFzcyBTbGlkZUNvbXBvbmVudCB7XG4gIC8qKiBJcyBjdXJyZW50IHNsaWRlIGFjdGl2ZSAqL1xuICBASG9zdEJpbmRpbmcoJ2NsYXNzLmFjdGl2ZScpXG4gIEBJbnB1dCgpXG4gIHB1YmxpYyBhY3RpdmU6IGJvb2xlYW47XG4gIEBIb3N0QmluZGluZygnY2xhc3MuYW5pbWF0ZWQnKSBhbmltYXRlZCA9IGZhbHNlO1xuICBASG9zdEJpbmRpbmcoJ2NsYXNzLmNhcm91c2VsLWl0ZW0tbmV4dCcpIGRpcmVjdGlvbk5leHQgPSBmYWxzZTtcbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5jYXJvdXNlbC1pdGVtLWxlZnQnKSBkaXJlY3Rpb25MZWZ0ID0gZmFsc2U7XG4gIEBIb3N0QmluZGluZygnY2xhc3MuY2Fyb3VzZWwtaXRlbS1wcmV2JykgZGlyZWN0aW9uUHJldiA9IGZhbHNlO1xuICBASG9zdEJpbmRpbmcoJ2NsYXNzLmNhcm91c2VsLWl0ZW0tcmlnaHQnKSBkaXJlY3Rpb25SaWdodCA9IGZhbHNlO1xuICAvKiogV3JhcHMgZWxlbWVudCBieSBhcHByb3ByaWF0ZSBDU1MgY2xhc3NlcyAqL1xuICBASG9zdEJpbmRpbmcoJ2NsYXNzLmNhcm91c2VsLWl0ZW0nKVxuXG4gIC8qKiBMaW5rIHRvIFBhcmVudChjb250YWluZXItY29sbGVjdGlvbikgY29tcG9uZW50ICovXG4gIHB1YmxpYyBlbDogRWxlbWVudFJlZiB8IGFueSA9IG51bGw7XG5cbiAgcHVibGljIGNvbnN0cnVjdG9yKGVsOiBFbGVtZW50UmVmKSB7XG4gICAgdGhpcy5lbCA9IGVsO1xuICB9XG59XG4iXX0=