import { __decorate, __metadata } from "tslib";
import { Component, OnInit, ElementRef, Renderer2, ChangeDetectionStrategy } from '@angular/core';
import * as ɵngcc0 from '@angular/core';

const _c0 = ["*"];
let MdbCardTitleComponent = class MdbCardTitleComponent {
    constructor(_el, _r) {
        this._el = _el;
        this._r = _r;
    }
    ngOnInit() {
        this._r.addClass(this._el.nativeElement, 'card-title');
    }
};
MdbCardTitleComponent.ɵfac = function MdbCardTitleComponent_Factory(t) { return new (t || MdbCardTitleComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };
MdbCardTitleComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MdbCardTitleComponent, selectors: [["mdb-card-title"]], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MdbCardTitleComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
MdbCardTitleComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 }
];
MdbCardTitleComponent = __decorate([ __metadata("design:paramtypes", [ElementRef, Renderer2])
], MdbCardTitleComponent);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MdbCardTitleComponent, [{
        type: Component,
        args: [{
                selector: 'mdb-card-title',
                template: "<ng-content></ng-content>",
                changeDetection: ChangeDetectionStrategy.OnPush
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, null); })();
export { MdbCardTitleComponent };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWRiLWNhcmQtdGl0bGUuY29tcG9uZW50LmpzIiwic291cmNlcyI6WyJuZzovYW5ndWxhci1ib290c3RyYXAtbWQvbGliL2ZyZWUvY2FyZHMvbWRiLWNhcmQtdGl0bGUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxVQUFVLEVBQUUsU0FBUyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sZUFBZSxDQUFDOzs7O0FBT2xHLElBQWEscUJBQXFCLEdBQWxDLE1BQWEscUJBQXFCO0lBQ2hDLFlBQW9CLEdBQWUsRUFBVSxFQUFhO1FBQXRDLFFBQUcsR0FBSCxHQUFHLENBQVk7UUFBVSxPQUFFLEdBQUYsRUFBRSxDQUFXO0lBQUcsQ0FBQztJQUU5RCxRQUFRO1FBQ04sSUFBSSxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxhQUFhLEVBQUUsWUFBWSxDQUFDLENBQUM7SUFDekQsQ0FBQztDQUNGOzs7OztpREFBQTs7WUFMMEIsVUFBVTtZQUFjLFNBQVM7O0FBRC9DLHFCQUFxQixlQUFlLEtBTGhELFNBQVMsQ0FBQyxVQUNULFFBQVEsRUFBRSxnQkFBZ0IsbkRBSXhCLGtDQUN1QixVQUFVLEVBQWMsU0FBUztHQUoxRCxBQUdXLHFCQUFxQixDQU1qQzthQVQrQyxVQUM5QyxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTSxNQUNoRCxDQUFDOzs7Ozs7O3VHQVFGO1NBUGEscUJBQXFCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIEVsZW1lbnRSZWYsIFJlbmRlcmVyMiwgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbWRiLWNhcmQtdGl0bGUnLFxuICB0ZW1wbGF0ZVVybDogJy4vbWRiLWNhcmQtdGl0bGUuY29tcG9uZW50Lmh0bWwnLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbn0pXG5leHBvcnQgY2xhc3MgTWRiQ2FyZFRpdGxlQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBfZWw6IEVsZW1lbnRSZWYsIHByaXZhdGUgX3I6IFJlbmRlcmVyMikge31cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLl9yLmFkZENsYXNzKHRoaXMuX2VsLm5hdGl2ZUVsZW1lbnQsICdjYXJkLXRpdGxlJyk7XG4gIH1cbn1cbiJdfQ==