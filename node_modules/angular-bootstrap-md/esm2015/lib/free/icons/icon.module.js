import { __decorate } from "tslib";
import { MdbIconComponent } from './icon.component';
import { NgModule } from '@angular/core';
import { FabDirective } from './directives/fab.directive';
import { FarDirective } from './directives/far.directive';
import { FasDirective } from './directives/fas.directive';
import { FalDirective } from './directives/fal.directive';
import { CommonModule } from '@angular/common';
import { FadDirective } from './directives/fad.directive';
import * as ɵngcc0 from '@angular/core';
let IconsModule = class IconsModule {
};
IconsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: IconsModule });
IconsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function IconsModule_Factory(t) { return new (t || IconsModule)(); }, imports: [[CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(IconsModule, { declarations: function () { return [MdbIconComponent,
        FabDirective,
        FarDirective,
        FasDirective,
        FalDirective,
        FadDirective]; }, imports: function () { return [CommonModule]; }, exports: function () { return [MdbIconComponent, FabDirective, FarDirective, FasDirective, FalDirective, FadDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IconsModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    MdbIconComponent,
                    FabDirective,
                    FarDirective,
                    FasDirective,
                    FalDirective,
                    FadDirective,
                ],
                imports: [CommonModule],
                exports: [MdbIconComponent, FabDirective, FarDirective, FasDirective, FalDirective, FadDirective]
            }]
    }], null, null); })();
export { IconsModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWNvbi5tb2R1bGUuanMiLCJzb3VyY2VzIjpbIm5nOi9hbmd1bGFyLWJvb3RzdHJhcC1tZC9saWIvZnJlZS9pY29ucy9pY29uLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDcEQsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDMUQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQzFELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDMUQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQzs7QUFjMUQsSUFBYSxXQUFXLEdBQXhCLE1BQWEsV0FBVztDQUFHOztFQUFBLENBQWQsV0FBVyxvQkFadkIsUUFBUSxDQUFDLFVBQ1IsWUFBWSxFQUFFLGNBQ1osZ0JBQWdCLGNBQ2hCLFlBQVksY0FDWixZQUFZO1NBQ1osWUFBWSxjQUNaLFlBQVksY0FDWixZQUFZLFdBQ2IsVUFDRCxPQUFPLEVBQUUsQ0FBQyxZQUFZLENBQUMsVUFDdkIsT0FBTyxFQUFFLENBQUMsZ0JBQWdCLEVBQUU7TUFBWSxFQUFFLFlBQVk7QUFBRSxZQUFZLEVBQUU7SUFBWSxFQUFFLFlBQVksQ0FBQztJQUNsRyxDQUFDLElBQ1csV0FBVyxDQUFHOzs7Ozs7Ozs7Ozs7Ozs7OzBCQUMzQjtTQURhLFdBQVciLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNZGJJY29uQ29tcG9uZW50IH0gZnJvbSAnLi9pY29uLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRmFiRGlyZWN0aXZlIH0gZnJvbSAnLi9kaXJlY3RpdmVzL2ZhYi5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgRmFyRGlyZWN0aXZlIH0gZnJvbSAnLi9kaXJlY3RpdmVzL2Zhci5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgRmFzRGlyZWN0aXZlIH0gZnJvbSAnLi9kaXJlY3RpdmVzL2Zhcy5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgRmFsRGlyZWN0aXZlIH0gZnJvbSAnLi9kaXJlY3RpdmVzL2ZhbC5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IEZhZERpcmVjdGl2ZSB9IGZyb20gJy4vZGlyZWN0aXZlcy9mYWQuZGlyZWN0aXZlJztcblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgTWRiSWNvbkNvbXBvbmVudCxcbiAgICBGYWJEaXJlY3RpdmUsXG4gICAgRmFyRGlyZWN0aXZlLFxuICAgIEZhc0RpcmVjdGl2ZSxcbiAgICBGYWxEaXJlY3RpdmUsXG4gICAgRmFkRGlyZWN0aXZlLFxuICBdLFxuICBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlXSxcbiAgZXhwb3J0czogW01kYkljb25Db21wb25lbnQsIEZhYkRpcmVjdGl2ZSwgRmFyRGlyZWN0aXZlLCBGYXNEaXJlY3RpdmUsIEZhbERpcmVjdGl2ZSwgRmFkRGlyZWN0aXZlXSxcbn0pXG5leHBvcnQgY2xhc3MgSWNvbnNNb2R1bGUge31cbiJdfQ==