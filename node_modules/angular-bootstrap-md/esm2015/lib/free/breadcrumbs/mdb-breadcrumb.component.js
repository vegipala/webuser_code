import { __decorate, __metadata } from "tslib";
import { Component, Input, ChangeDetectionStrategy } from '@angular/core';
import * as ɵngcc0 from '@angular/core';

const _c0 = ["*"];
let MdbBreadcrumbComponent = class MdbBreadcrumbComponent {
};
MdbBreadcrumbComponent.ɵfac = function MdbBreadcrumbComponent_Factory(t) { return new (t || MdbBreadcrumbComponent)(); };
MdbBreadcrumbComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MdbBreadcrumbComponent, selectors: [["mdb-breadcrumb"]], inputs: { customClass: "customClass", textTransform: "textTransform" }, ngContentSelectors: _c0, decls: 2, vars: 4, template: function MdbBreadcrumbComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "ol");
        ɵngcc0.ɵɵprojection(1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassMapInterpolate2("breadcrumb list-inline list-unstyled ", ctx.customClass, " text-", ctx.textTransform, "");
    } }, encapsulation: 2, changeDetection: 0 });
__decorate([
    Input(),
    __metadata("design:type", String)
], MdbBreadcrumbComponent.prototype, "customClass", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], MdbBreadcrumbComponent.prototype, "textTransform", void 0);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MdbBreadcrumbComponent, [{
        type: Component,
        args: [{
                selector: 'mdb-breadcrumb',
                template: "<ol class=\"breadcrumb list-inline list-unstyled {{customClass}} text-{{textTransform}}\">\n  <ng-content></ng-content>\n</ol>\n",
                changeDetection: ChangeDetectionStrategy.OnPush
            }]
    }], null, { customClass: [{
            type: Input
        }], textTransform: [{
            type: Input
        }] }); })();
export { MdbBreadcrumbComponent };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWRiLWJyZWFkY3J1bWIuY29tcG9uZW50LmpzIiwic291cmNlcyI6WyJuZzovYW5ndWxhci1ib290c3RyYXAtbWQvbGliL2ZyZWUvYnJlYWRjcnVtYnMvbWRiLWJyZWFkY3J1bWIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSx1QkFBdUIsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7OztBQU8xRSxJQUFhLHNCQUFzQixHQUFuQyxNQUFhLHNCQUFzQjtDQUdsQzs7Ozs7Ozs7O2lEQUFBO0FBRlU7SUFBUixLQUFLLEVBQUU7OzJEQUFxQjtBQUNwQjtJQUFSLEtBQUssRUFBRTs7NkRBQXVCLENBQ2pDO0FBSGEsc0JBQXNCLG9CQUxsQyxTQUFTLENBQUMsVUFDVCxRQUFRLEVBQUU7T0FBZ0IsVUFDMUI7Ozt1RUFBOEMsVUFDOUMsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU0sTUFDaEQsQ0FBQyxJQUNXO0dBQXNCLENBR2xDOzs7Ozs7b0JBQ0Q7U0FKYSxzQkFBc0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdtZGItYnJlYWRjcnVtYicsXG4gIHRlbXBsYXRlVXJsOiAnLi9tZGItYnJlYWRjcnVtYi5jb21wb25lbnQuaHRtbCcsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxufSlcbmV4cG9ydCBjbGFzcyBNZGJCcmVhZGNydW1iQ29tcG9uZW50IHtcbiAgQElucHV0KCkgY3VzdG9tQ2xhc3M6IHN0cmluZztcbiAgQElucHV0KCkgdGV4dFRyYW5zZm9ybTogc3RyaW5nO1xufVxuIl19