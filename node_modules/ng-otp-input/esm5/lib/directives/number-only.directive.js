/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, ElementRef, Renderer2, Input } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
var NumberOnlyDirective = /** @class */ (function () {
    function NumberOnlyDirective(_elRef, _renderer) {
        this._elRef = _elRef;
        this._renderer = _renderer;
    }
    /**
     * @return {?}
     */
    NumberOnlyDirective.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        if (!this.disabledNumberOnly) {
            this._renderer.setAttribute(this._elRef.nativeElement, 'onkeypress', 'return (event.charCode >= 48 && event.charCode <= 57) || event.charCode == 0');
        }
    };
    /** @nocollapse */
    NumberOnlyDirective.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 }
    ]; };
    NumberOnlyDirective.propDecorators = {
        disabledNumberOnly: [{ type: Input }]
    };
NumberOnlyDirective.ɵfac = function NumberOnlyDirective_Factory(t) { return new (t || NumberOnlyDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };
NumberOnlyDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NumberOnlyDirective, selectors: [["", "numberOnly", ""]], inputs: { disabledNumberOnly: "disabledNumberOnly" } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NumberOnlyDirective, [{
        type: Directive,
        args: [{
                selector: '[numberOnly]'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { disabledNumberOnly: [{
            type: Input
        }] }); })();
    return NumberOnlyDirective;
}());
export { NumberOnlyDirective };
if (false) {
    /** @type {?} */
    NumberOnlyDirective.prototype.disabledNumberOnly;
    /**
     * @type {?}
     * @private
     */
    NumberOnlyDirective.prototype._elRef;
    /**
     * @type {?}
     * @private
     */
    NumberOnlyDirective.prototype._renderer;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibnVtYmVyLW9ubHkuZGlyZWN0aXZlLmpzIiwic291cmNlcyI6WyJuZzovbmctb3RwLWlucHV0L2xpYi9kaXJlY3RpdmVzL251bWJlci1vbmx5LmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQzs7QUFFeEU7SUFLRSw2QkFBcUIsTUFBa0IsRUFBVSxTQUFvQjtRQUFoRCxXQUFNLEdBQU4sTUFBTSxDQUFZO1FBQVUsY0FBUyxHQUFULFNBQVMsQ0FBVztJQUFJLENBQUM7Ozs7SUFFMUUsc0NBQVE7OztJQUFSO1FBQ0UsSUFBRyxDQUFDLElBQUksQ0FBQyxrQkFBa0IsRUFBQztZQUMxQixJQUFJLENBQUMsU0FBUyxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLGFBQWEsRUFBRSxZQUFZLEVBQUUsOEVBQThFLENBQUMsQ0FBQztTQUN0SjtJQUNILENBQUMsQ0FDSCxBQVRTOztnQ0FIUixTQUFTLFNBQUM7UUFDVCxRQUFRLEVBQUUsRkFIUSxVQUFVO0VBR0osa0JBQ3pCLEpBSitCLFNBQVM7OztxQ0FNdEMsS0FBSzs7Ozs7Ozs7Ozs7b0JBQVU7SUFTbEIsMEJBQUM7Q0FBQSxBQWJELElBYUM7U0FWWSxtQkFBbUI7OztJQUM5QixpREFBb0M7Ozs7O0lBQ3ZCLHFDQUEwQjs7Ozs7SUFBRSx3Q0FBNEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIEVsZW1lbnRSZWYsIFJlbmRlcmVyMiwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbkBEaXJlY3RpdmUoe1xyXG4gIHNlbGVjdG9yOiAnW251bWJlck9ubHldJ1xyXG59KVxyXG5leHBvcnQgY2xhc3MgTnVtYmVyT25seURpcmVjdGl2ZSB7XHJcbiAgQElucHV0KCkgZGlzYWJsZWROdW1iZXJPbmx5OmJvb2xlYW47XHJcbiAgY29uc3RydWN0b3IgKHByaXZhdGUgX2VsUmVmOiBFbGVtZW50UmVmLCBwcml2YXRlIF9yZW5kZXJlcjogUmVuZGVyZXIyKSB7IH1cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICBpZighdGhpcy5kaXNhYmxlZE51bWJlck9ubHkpe1xyXG4gICAgICB0aGlzLl9yZW5kZXJlci5zZXRBdHRyaWJ1dGUodGhpcy5fZWxSZWYubmF0aXZlRWxlbWVudCwgJ29ua2V5cHJlc3MnLCAncmV0dXJuIChldmVudC5jaGFyQ29kZSA+PSA0OCAmJiBldmVudC5jaGFyQ29kZSA8PSA1NykgfHwgZXZlbnQuY2hhckNvZGUgPT0gMCcpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbn0iXX0=