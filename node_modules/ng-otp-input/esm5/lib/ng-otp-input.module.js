/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { NgOtpInputComponent } from './components/ng-otp-input/ng-otp-input.component';
import { KeysPipe } from './pipes/keys.pipe';
import { ReactiveFormsModule, FormsModule } from '@angular/forms';
import { CommonModule } from '@angular/common';
import { NumberOnlyDirective } from './directives/number-only.directive';
import * as ɵngcc0 from '@angular/core';
var NgOtpInputModule = /** @class */ (function () {
    function NgOtpInputModule() {
    }
NgOtpInputModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgOtpInputModule });
NgOtpInputModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgOtpInputModule_Factory(t) { return new (t || NgOtpInputModule)(); }, providers: [KeysPipe], imports: [[
            CommonModule,
            FormsModule,
            ReactiveFormsModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgOtpInputModule, { declarations: function () { return [NgOtpInputComponent, KeysPipe, NumberOnlyDirective]; }, imports: function () { return [CommonModule,
        FormsModule,
        ReactiveFormsModule]; }, exports: function () { return [NgOtpInputComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgOtpInputModule, [{
        type: NgModule,
        args: [{
                imports: [
                    CommonModule,
                    FormsModule,
                    ReactiveFormsModule
                ],
                declarations: [NgOtpInputComponent, KeysPipe, NumberOnlyDirective],
                exports: [NgOtpInputComponent],
                providers: [KeysPipe]
            }]
    }], function () { return []; }, null); })();
    return NgOtpInputModule;
}());
export { NgOtpInputModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmctb3RwLWlucHV0Lm1vZHVsZS5qcyIsInNvdXJjZXMiOlsibmc6L25nLW90cC1pbnB1dC9saWIvbmctb3RwLWlucHV0Lm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxrREFBa0QsQ0FBQztBQUN2RixPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDN0MsT0FBTyxFQUFFLG1CQUFtQixFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ2xFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQzs7QUFFekU7SUFBQTtJQVVnQyxDQUFDO29EQVZoQyxRQUFRLFNBQUM7Y0FDUixPQUFPLEVBQUUsMEJBQ1AsWUFBWSwwQkFDWixXQUFXLDBCQUNYLG1CQUFtQixzQkFDcEI7YUFDRCxZQUFZO0NBQUUsQ0FBQyxtQkFBbUIsRUFBRTtNQUFRLEVBQUUsbUJBQW1CLENBQUM7O0dBQ2xFLE9BQU8sRUFBRSxDQUFDLG1CQUFtQixDQUFDLHNCQUM5QixTQUFTLEVBQUUsQ0FBQyxRQUFRLENBQUMsa0JBQ3RCOzs7Ozs7Ozs7Ozs7Ozs7Z0RBQ1E7SUFBdUIsdUJBQUM7Q0FBQSxBQVZqQyxJQVVpQztTQUFwQixnQkFBZ0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBOZ090cElucHV0Q29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL25nLW90cC1pbnB1dC9uZy1vdHAtaW5wdXQuY29tcG9uZW50JztcclxuaW1wb3J0IHsgS2V5c1BpcGUgfSBmcm9tICcuL3BpcGVzL2tleXMucGlwZSc7XHJcbmltcG9ydCB7IFJlYWN0aXZlRm9ybXNNb2R1bGUsIEZvcm1zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xyXG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xyXG5pbXBvcnQgeyBOdW1iZXJPbmx5RGlyZWN0aXZlIH0gZnJvbSAnLi9kaXJlY3RpdmVzL251bWJlci1vbmx5LmRpcmVjdGl2ZSc7XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGltcG9ydHM6IFtcclxuICAgIENvbW1vbk1vZHVsZSxcclxuICAgIEZvcm1zTW9kdWxlLFxyXG4gICAgUmVhY3RpdmVGb3Jtc01vZHVsZVxyXG4gIF0sXHJcbiAgZGVjbGFyYXRpb25zOiBbTmdPdHBJbnB1dENvbXBvbmVudCwgS2V5c1BpcGUsIE51bWJlck9ubHlEaXJlY3RpdmVdLFxyXG4gIGV4cG9ydHM6IFtOZ090cElucHV0Q29tcG9uZW50XSxcclxuICBwcm92aWRlcnM6IFtLZXlzUGlwZV1cclxufSlcclxuZXhwb3J0IGNsYXNzIE5nT3RwSW5wdXRNb2R1bGUgeyB9XHJcbiJdfQ==