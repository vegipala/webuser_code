(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? factory(require('@angular/core'),require('@angular/platform-browser'),require('@angular/common'),exports, require('@angular/core'), require('@angular/platform-browser'), require('rxjs'), require('rxjs/operators'), require('@angular/animations'), require('@angular/common')) :
	typeof define === 'function' && define.amd ? define(['@angular/core','@angular/platform-browser','@angular/common','exports', '@angular/core', '@angular/platform-browser', 'rxjs', 'rxjs/operators', '@angular/animations', '@angular/common'], factory) :
	(factory(global.ng.core,global.ng.platformBrowser,global.ng.common,(global.angular2toaster = {}),global.ng.core,global.platformBrowser,global.rxjs,global.operators,global.animations,global.ng.common));
}(this, (function (ɵngcc0,ɵngcc1,ɵngcc2,exports,core,platformBrowser,rxjs,operators,animations,common) { 
var _c0 = ["componentBody"];
var _c1 = ["toastComp", ""];
function ToastComponent_div_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", null, 7);
} }
function ToastComponent_div_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 8);
} if (rf & 2) {
    var ctx_r24 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("innerHTML", ctx_r24.safeBodyHtml, ɵngcc0.ɵɵsanitizeHtml);
} }
function ToastComponent_div_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r25 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r25.toast.body);
} }
function ToastComponent_div_8_Template(rf, ctx) { if (rf & 1) {
    var _r29 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 9);
    ɵngcc0.ɵɵlistener("click", function ToastComponent_div_8_Template_div_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r29); var ctx_r28 = ɵngcc0.ɵɵnextContext(); return ctx_r28.click($event, ctx_r28.toast); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r26 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("innerHTML", ctx_r26.safeCloseHtml, ɵngcc0.ɵɵsanitizeHtml);
} }
function ToasterContainerComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    var _r33 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 2);
    ɵngcc0.ɵɵlistener("click", function ToasterContainerComponent_div_1_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r33); var toast_r31 = ctx.$implicit; var ctx_r32 = ɵngcc0.ɵɵnextContext(); return ctx_r32.click(toast_r31); })("clickEvent", function ToasterContainerComponent_div_1_Template_div_clickEvent_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r33); var ctx_r34 = ɵngcc0.ɵɵnextContext(); return ctx_r34.childClick($event); })("mouseover", function ToasterContainerComponent_div_1_Template_div_mouseover_0_listener() { ɵngcc0.ɵɵrestoreView(_r33); var toast_r31 = ctx.$implicit; var ctx_r35 = ɵngcc0.ɵɵnextContext(); return ctx_r35.stopTimer(toast_r31); })("mouseout", function ToasterContainerComponent_div_1_Template_div_mouseout_0_listener() { ɵngcc0.ɵɵrestoreView(_r33); var toast_r31 = ctx.$implicit; var ctx_r36 = ɵngcc0.ɵɵnextContext(); return ctx_r36.restartTimer(toast_r31); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var toast_r31 = ctx.$implicit;
    var ctx_r30 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("toast", toast_r31)("@toastState", ctx_r30.toasterconfig.animation)("iconClass", ctx_r30.toasterconfig.iconClasses[toast_r31.type])("titleClass", ctx_r30.toasterconfig.titleClass)("messageClass", ctx_r30.toasterconfig.messageClass)("ngClass", ctx_r30.toasterconfig.typeClasses[toast_r31.type]);
} }
var _c2 = function (a0) { return [a0]; };
'use strict';

(function (BodyOutputType) {
    BodyOutputType[BodyOutputType["Default"] = 0] = "Default";
    BodyOutputType[BodyOutputType["TrustedHtml"] = 1] = "TrustedHtml";
    BodyOutputType[BodyOutputType["Component"] = 2] = "Component";
})(exports.BodyOutputType || (exports.BodyOutputType = {}));

var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var ToastComponent = /** @class */ (function () {
    function ToastComponent(sanitizer, componentFactoryResolver, changeDetectorRef) {
        this.sanitizer = sanitizer;
        this.componentFactoryResolver = componentFactoryResolver;
        this.changeDetectorRef = changeDetectorRef;
        this.bodyOutputType = exports.BodyOutputType;
        this.clickEvent = new core.EventEmitter();
    }
    ToastComponent.prototype.ngOnInit = function () {
        if (this.toast.closeHtml) {
            this.safeCloseHtml = this.sanitizer.bypassSecurityTrustHtml(this.toast.closeHtml);
        }
        if (this.toast.bodyOutputType === exports.BodyOutputType.TrustedHtml) {
            this.safeBodyHtml = this.sanitizer.bypassSecurityTrustHtml(this.toast.body);
        }
    };
    ToastComponent.prototype.ngAfterViewInit = function () {
        if (this.toast.bodyOutputType === this.bodyOutputType.Component) {
            var component = this.componentFactoryResolver.resolveComponentFactory(this.toast.body);
            var componentInstance = this.componentBody.createComponent(component, undefined, this.componentBody.injector);
            componentInstance.instance.toast = this.toast;
            this.changeDetectorRef.detectChanges();
        }
    };
    ToastComponent.prototype.click = function (event, toast) {
        event.stopPropagation();
        this.clickEvent.emit({
            value: { toast: toast, isCloseButton: true }
        });
    };
    __decorate([
        core.Input(),
        __metadata("design:type", Object)
    ], ToastComponent.prototype, "toast", void 0);
    __decorate([
        core.Input(),
        __metadata("design:type", String)
    ], ToastComponent.prototype, "iconClass", void 0);
    __decorate([
        core.Input(),
        __metadata("design:type", String)
    ], ToastComponent.prototype, "titleClass", void 0);
    __decorate([
        core.Input(),
        __metadata("design:type", String)
    ], ToastComponent.prototype, "messageClass", void 0);
    __decorate([
        core.ViewChild('componentBody', { read: core.ViewContainerRef, static: false }),
        __metadata("design:type", core.ViewContainerRef)
    ], ToastComponent.prototype, "componentBody", void 0);
    __decorate([
        core.Output(),
        __metadata("design:type", Object)
    ], ToastComponent.prototype, "clickEvent", void 0);
    ToastComponent = __decorate([ __metadata("design:paramtypes", [platformBrowser.DomSanitizer,
            core.ComponentFactoryResolver,
            core.ChangeDetectorRef])
    ], ToastComponent);
ToastComponent.ɵfac = function ToastComponent_Factory(t) { return new (t || ToastComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DomSanitizer), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };
ToastComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ToastComponent, selectors: [["", "toastComp", ""]], viewQuery: function ToastComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, true, core.ViewContainerRef);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.componentBody = _t.first);
    } }, inputs: { toast: "toast", iconClass: "iconClass", titleClass: "titleClass", messageClass: "messageClass" }, outputs: { clickEvent: "clickEvent" }, attrs: _c1, decls: 9, vars: 9, consts: [[1, "toaster-icon", 3, "ngClass"], [1, "toast-content"], [3, "ngClass"], [3, "ngClass", "ngSwitch"], [4, "ngSwitchCase"], [3, "innerHTML", 4, "ngSwitchCase"], ["class", "toast-close-button", 3, "innerHTML", "click", 4, "ngIf"], ["componentBody", ""], [3, "innerHTML"], [1, "toast-close-button", 3, "innerHTML", "click"]], template: function ToastComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelement(0, "i", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵtext(3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(4, "div", 3);
        ɵngcc0.ɵɵtemplate(5, ToastComponent_div_5_Template, 2, 0, "div", 4);
        ɵngcc0.ɵɵtemplate(6, ToastComponent_div_6_Template, 1, 1, "div", 5);
        ɵngcc0.ɵɵtemplate(7, ToastComponent_div_7_Template, 2, 1, "div", 4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(8, ToastComponent_div_8_Template, 1, 1, "div", 6);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ctx.iconClass);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngClass", ctx.titleClass);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate(ctx.toast.title);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngClass", ctx.messageClass)("ngSwitch", ctx.toast.bodyOutputType);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngSwitchCase", ctx.bodyOutputType.Component);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngSwitchCase", ctx.bodyOutputType.TrustedHtml);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngSwitchCase", ctx.bodyOutputType.Default);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.toast.showCloseButton);
    } }, directives: [ɵngcc2.NgClass, ɵngcc2.NgSwitch, ɵngcc2.NgSwitchCase, ɵngcc2.NgIf], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ToastComponent, [{
        type: core.Component,
        args: [{
                selector: '[toastComp]',
                template: "\n        <i class=\"toaster-icon\" [ngClass]=\"iconClass\"></i>\n        <div class=\"toast-content\">\n            <div [ngClass]=\"titleClass\">{{toast.title}}</div>\n            <div [ngClass]=\"messageClass\" [ngSwitch]=\"toast.bodyOutputType\">\n                <div *ngSwitchCase=\"bodyOutputType.Component\" #componentBody></div>\n                <div *ngSwitchCase=\"bodyOutputType.TrustedHtml\" [innerHTML]=\"safeBodyHtml\"></div>\n                <div *ngSwitchCase=\"bodyOutputType.Default\">{{toast.body}}</div>\n            </div>\n        </div>\n        <div class=\"toast-close-button\" *ngIf=\"toast.showCloseButton\" (click)=\"click($event, toast)\"\n            [innerHTML]=\"safeCloseHtml\">\n        </div>"
            }]
    }], function () { return [{ type: ɵngcc1.DomSanitizer }, { type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ChangeDetectorRef }]; }, { clickEvent: [{
            type: core.Output
        }], toast: [{
            type: core.Input
        }], iconClass: [{
            type: core.Input
        }], titleClass: [{
            type: core.Input
        }], messageClass: [{
            type: core.Input
        }], componentBody: [{
            type: core.ViewChild,
            args: ['componentBody', { read: core.ViewContainerRef, static: false }]
        }] }); })();
    return ToastComponent;
}());

var ToasterConfig = /** @class */ (function () {
    function ToasterConfig(configOverrides) {
        configOverrides = configOverrides || {};
        this.limit = configOverrides.limit || null;
        this.tapToDismiss = configOverrides.tapToDismiss != null ? configOverrides.tapToDismiss : true;
        this.showCloseButton = configOverrides.showCloseButton != null ? configOverrides.showCloseButton : false;
        this.closeHtml = configOverrides.closeHtml || '<button class="toast-close-button" type="button">&times;</button>';
        this.newestOnTop = configOverrides.newestOnTop != null ? configOverrides.newestOnTop : true;
        this.timeout = configOverrides.timeout != null ? configOverrides.timeout : 5000;
        this.typeClasses = configOverrides.typeClasses || {
            error: 'toast-error',
            info: 'toast-info',
            wait: 'toast-wait',
            success: 'toast-success',
            warning: 'toast-warning'
        };
        this.iconClasses = configOverrides.iconClasses || {
            error: 'icon-error',
            info: 'icon-info',
            wait: 'icon-wait',
            success: 'icon-success',
            warning: 'icon-warning'
        };
        this.bodyOutputType = configOverrides.bodyOutputType || exports.BodyOutputType.Default;
        this.bodyTemplate = configOverrides.bodyTemplate || 'toasterBodyTmpl.html';
        this.defaultTypeClass = configOverrides.defaultTypeClass || 'toast-info';
        this.positionClass = configOverrides.positionClass || 'toast-top-right';
        this.titleClass = configOverrides.titleClass || 'toast-title';
        this.messageClass = configOverrides.messageClass || 'toast-message';
        this.animation = configOverrides.animation || '';
        this.preventDuplicates = configOverrides.preventDuplicates != null ? configOverrides.preventDuplicates : false;
        this.mouseoverTimerStop = configOverrides.mouseoverTimerStop != null ? configOverrides.mouseoverTimerStop : false;
        this.toastContainerId = configOverrides.toastContainerId != null ? configOverrides.toastContainerId : null;
    }
    return ToasterConfig;
}());

var __decorate$1 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata$1 = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
// http://stackoverflow.com/questions/26501688/a-typescript-guid-class
var Guid = /** @class */ (function () {
    function Guid() {
    }
    Guid.newGuid = function () {
        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
            var r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);
            return v.toString(16);
        });
    };
    return Guid;
}());
var ToasterService = /** @class */ (function () {
    /**
     * Creates an instance of ToasterService.
     */
    function ToasterService() {
        var _this = this;
        this.addToast = new rxjs.Observable(function (observer) { return _this._addToast = observer; }).pipe(operators.share());
        this.clearToasts = new rxjs.Observable(function (observer) { return _this._clearToasts = observer; }).pipe(operators.share());
        this._removeToastSubject = new rxjs.Subject();
        this.removeToast = this._removeToastSubject.pipe(operators.share());
    }
    /**
     * Synchronously create and show a new toast instance.
     *
     * @param {(string | Toast)} type The type of the toast, or a Toast object.
     * @param {string=} title The toast title.
     * @param {string=} body The toast body.
     * @returns {Toast}
     *          The newly created Toast instance with a randomly generated GUID Id.
     */
    ToasterService.prototype.pop = function (type, title, body) {
        var toast = typeof type === 'string' ? { type: type, title: title, body: body } : type;
        if (!toast.toastId) {
            toast.toastId = Guid.newGuid();
        }
        if (!this._addToast) {
            throw new Error('No Toaster Containers have been initialized to receive toasts.');
        }
        this._addToast.next(toast);
        return toast;
    };
    /**
     * Asynchronously create and show a new toast instance.
     *
     * @param {(string | Toast)} type The type of the toast, or a Toast object.
     * @param {string=} title The toast title.
     * @param {string=} body The toast body.
     * @returns {Observable<Toast>}
     *          A hot Observable that can be subscribed to in order to receive the Toast instance
     *          with a randomly generated GUID Id.
     */
    ToasterService.prototype.popAsync = function (type, title, body) {
        var _this = this;
        setTimeout(function () {
            _this.pop(type, title, body);
        }, 0);
        return this.addToast;
    };
    /**
     * Clears a toast by toastId and/or toastContainerId.
     *
     * @param {string} toastId The toastId to clear.
     * @param {number=} toastContainerId
     *        The toastContainerId of the container to remove toasts from.
     */
    ToasterService.prototype.clear = function (toastId, toastContainerId) {
        var clearWrapper = {
            toastId: toastId, toastContainerId: toastContainerId
        };
        this._clearToasts.next(clearWrapper);
    };
    ToasterService = __decorate$1([ __metadata$1("design:paramtypes", [])
    ], ToasterService);
ToasterService.ɵfac = function ToasterService_Factory(t) { return new (t || ToasterService)(); };
ToasterService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: ToasterService, factory: function (t) { return ToasterService.ɵfac(t); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ToasterService, [{
        type: core.Injectable
    }], function () { return []; }, null); })();
    return ToasterService;
}());

var __decorate$2 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata$2 = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var ToasterContainerComponent = /** @class */ (function () {
    function ToasterContainerComponent(toasterService, ref, ngZone) {
        this.ref = ref;
        this.ngZone = ngZone;
        this.timeoutIds = new Map();
        this.toasts = [];
        this.toasterService = toasterService;
    }
    ToasterContainerComponent.prototype.ngOnInit = function () {
        this.registerSubscribers();
        if (this.isNullOrUndefined(this.toasterconfig)) {
            this.toasterconfig = new ToasterConfig();
        }
    };
    // event handlers
    ToasterContainerComponent.prototype.click = function (toast, isCloseButton) {
        if (this.toasterconfig.tapToDismiss || (toast.showCloseButton && isCloseButton)) {
            var removeToast = true;
            if (toast.clickHandler) {
                if (typeof toast.clickHandler === 'function') {
                    removeToast = toast.clickHandler(toast, isCloseButton);
                }
                else {
                    console.log('The toast click handler is not a callable function.');
                    return false;
                }
            }
            if (removeToast) {
                this.removeToast(toast);
            }
        }
    };
    ToasterContainerComponent.prototype.childClick = function ($event) {
        this.click($event.value.toast, $event.value.isCloseButton);
    };
    ToasterContainerComponent.prototype.stopTimer = function (toast) {
        if (this.toasterconfig.mouseoverTimerStop) {
            var toastId = this.toastIdOrDefault(toast);
            var timeoutId = this.timeoutIds.get(toastId);
            if (timeoutId) {
                window.clearTimeout(timeoutId);
                this.timeoutIds.delete(toastId);
            }
        }
    };
    ToasterContainerComponent.prototype.restartTimer = function (toast) {
        var timeoutId = this.timeoutIds.get(this.toastIdOrDefault(toast));
        if (this.toasterconfig.mouseoverTimerStop) {
            if (!timeoutId) {
                this.configureTimer(toast);
            }
        }
        else if (toast.timeout !== 0 && !timeoutId && this.toasterconfig.timeout) {
            this.removeToast(toast);
        }
    };
    // private functions
    ToasterContainerComponent.prototype.registerSubscribers = function () {
        var _this = this;
        this.addToastSubscriber = this.toasterService.addToast.subscribe(function (toast) {
            _this.addToast(toast);
        });
        this.clearToastsSubscriber = this.toasterService.clearToasts.subscribe(function (clearWrapper) {
            _this.clearToasts(clearWrapper);
        });
    };
    ToasterContainerComponent.prototype.addToast = function (toast) {
        if (toast.toastContainerId && this.toasterconfig.toastContainerId
            && toast.toastContainerId !== this.toasterconfig.toastContainerId) {
            return;
        }
        
        if (!toast.type) {
            toast.type = this.toasterconfig.defaultTypeClass;
        }
        if (this.toasterconfig.preventDuplicates && this.toasts.length > 0) {
            if (toast.toastId && this.toasts.some(function (t) { return t.toastId === toast.toastId; })) {
                return;
            }
            else if (this.toasts.some(function (t) { return t.body === toast.body; })) {
                return;
            }
        }
        if (this.isNullOrUndefined(toast.showCloseButton)) {
            if (typeof this.toasterconfig.showCloseButton === 'object') {
                toast.showCloseButton = this.toasterconfig.showCloseButton[toast.type];
            }
            else if (typeof this.toasterconfig.showCloseButton === 'boolean') {
                toast.showCloseButton = this.toasterconfig.showCloseButton;
            }
        }
        if (toast.showCloseButton) {
            toast.closeHtml = toast.closeHtml || this.toasterconfig.closeHtml;
        }
        toast.bodyOutputType = toast.bodyOutputType || this.toasterconfig.bodyOutputType;
        this.configureTimer(toast);
        if (this.toasterconfig.newestOnTop) {
            this.toasts.unshift(toast);
            if (this.isLimitExceeded()) {
                this.toasts.pop();
            }
        }
        else {
            this.toasts.push(toast);
            if (this.isLimitExceeded()) {
                this.toasts.shift();
            }
        }
        if (toast.onShowCallback) {
            toast.onShowCallback(toast);
        }
    };
    ToasterContainerComponent.prototype.configureTimer = function (toast) {
        var _this = this;
        var timeout = (typeof toast.timeout === 'number')
            ? toast.timeout : this.toasterconfig.timeout;
        if (typeof timeout === 'object') {
            timeout = timeout[toast.type];
        }
        
        if (timeout > 0) {
            this.ngZone.runOutsideAngular(function () {
                var timeoutId = window.setTimeout(function () {
                    _this.ngZone.run(function () {
                        _this.ref.markForCheck();
                        _this.removeToast(toast);
                    });
                }, timeout);
                _this.timeoutIds.set(_this.toastIdOrDefault(toast), timeoutId);
            });
        }
    };
    ToasterContainerComponent.prototype.isLimitExceeded = function () {
        return this.toasterconfig.limit && this.toasts.length > this.toasterconfig.limit;
    };
    ToasterContainerComponent.prototype.removeToast = function (toast) {
        var index = this.toasts.indexOf(toast);
        if (index < 0) {
            return;
        }
        
        var toastId = this.toastIdOrDefault(toast);
        var timeoutId = this.timeoutIds.get(toastId);
        this.toasts.splice(index, 1);
        if (timeoutId) {
            window.clearTimeout(timeoutId);
            this.timeoutIds.delete(toastId);
        }
        if (toast.onHideCallback) {
            toast.onHideCallback(toast);
        }
        this.toasterService._removeToastSubject.next({ toastId: toastId, toastContainerId: toast.toastContainerId });
    };
    ToasterContainerComponent.prototype.removeAllToasts = function () {
        for (var i = this.toasts.length - 1; i >= 0; i--) {
            this.removeToast(this.toasts[i]);
        }
    };
    ToasterContainerComponent.prototype.clearToasts = function (clearWrapper) {
        var toastId = clearWrapper.toastId;
        var toastContainerId = clearWrapper.toastContainerId;
        if (this.isNullOrUndefined(toastContainerId)) {
            this.clearToastsAction(toastId);
        }
        else if (toastContainerId === this.toasterconfig.toastContainerId) {
            this.clearToastsAction(toastId);
        }
    };
    ToasterContainerComponent.prototype.clearToastsAction = function (toastId) {
        if (toastId) {
            this.removeToast(this.toasts.filter(function (t) { return t.toastId === toastId; })[0]);
        }
        else {
            this.removeAllToasts();
        }
    };
    ToasterContainerComponent.prototype.toastIdOrDefault = function (toast) {
        return toast.toastId || '';
    };
    ToasterContainerComponent.prototype.isNullOrUndefined = function (value) {
        return value === null || typeof value === 'undefined';
    };
    ToasterContainerComponent.prototype.ngOnDestroy = function () {
        if (this.addToastSubscriber) {
            this.addToastSubscriber.unsubscribe();
        }
        if (this.clearToastsSubscriber) {
            this.clearToastsSubscriber.unsubscribe();
        }
    };
    __decorate$2([
        core.Input(),
        __metadata$2("design:type", ToasterConfig)
    ], ToasterContainerComponent.prototype, "toasterconfig", void 0);
    ToasterContainerComponent = __decorate$2([ __metadata$2("design:paramtypes", [ToasterService, core.ChangeDetectorRef, core.NgZone])
    ], ToasterContainerComponent);
ToasterContainerComponent.ɵfac = function ToasterContainerComponent_Factory(t) { return new (t || ToasterContainerComponent)(ɵngcc0.ɵɵdirectiveInject(ToasterService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ToasterContainerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ToasterContainerComponent, selectors: [["toaster-container"]], inputs: { toasterconfig: "toasterconfig" }, decls: 2, vars: 4, consts: [["id", "toast-container", 3, "ngClass"], ["toastComp", "", "class", "toast", 3, "toast", "iconClass", "titleClass", "messageClass", "ngClass", "click", "clickEvent", "mouseover", "mouseout", 4, "ngFor", "ngForOf"], ["toastComp", "", 1, "toast", 3, "toast", "iconClass", "titleClass", "messageClass", "ngClass", "click", "clickEvent", "mouseover", "mouseout"]], template: function ToasterContainerComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, ToasterContainerComponent_div_1_Template, 1, 6, "div", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(2, _c2, ctx.toasterconfig.positionClass));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.toasts);
    } }, directives: [ɵngcc2.NgClass, ɵngcc2.NgForOf, ToastComponent], encapsulation: 2, data: { animation: [
            animations.trigger('toastState', [
                animations.state('flyRight, flyLeft, slideDown, slideUp, fade', animations.style({ opacity: 1, transform: 'translate(0,0)' })),
                animations.transition('void => flyRight', [
                    animations.style({
                        opacity: 0, transform: 'translateX(100%)'
                    }),
                    animations.animate('0.25s ease-in')
                ]),
                animations.transition('flyRight => void', [
                    animations.animate('0.25s 10ms ease-out', animations.style({
                        opacity: 0, transform: 'translateX(100%)'
                    }))
                ]),
                animations.transition('void => flyLeft', [
                    animations.style({
                        opacity: 0, transform: 'translateX(-100%)'
                    }),
                    animations.animate('0.25s ease-in')
                ]),
                animations.transition('flyLeft => void', [
                    animations.animate('0.25s 10ms ease-out', animations.style({
                        opacity: 0, transform: 'translateX(-100%)'
                    }))
                ]),
                animations.transition('void => slideDown', [
                    animations.style({
                        opacity: 0, transform: 'translateY(-200%)'
                    }),
                    animations.animate('0.3s ease-in')
                ]),
                animations.transition('slideDown => void', [
                    animations.animate('0.3s 10ms ease-out', animations.style({
                        opacity: 0, transform: 'translateY(200%)'
                    }))
                ]),
                animations.transition('void => slideUp', [
                    animations.style({
                        opacity: 0, transform: 'translateY(200%)'
                    }),
                    animations.animate('0.3s ease-in')
                ]),
                animations.transition('slideUp => void', [
                    animations.animate('0.3s 10ms ease-out', animations.style({
                        opacity: 0, transform: 'translateY(-200%)'
                    }))
                ]),
                animations.transition('void => fade', [
                    animations.style({
                        opacity: 0
                    }),
                    animations.animate('0.3s ease-in')
                ]),
                animations.transition('fade => void', [
                    animations.animate('0.3s 10ms ease-out', animations.style({
                        opacity: 0
                    }))
                ])
            ]),
        ] } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ToasterContainerComponent, [{
        type: core.Component,
        args: [{
                selector: 'toaster-container',
                template: "\n        <div id=\"toast-container\" [ngClass]=\"[toasterconfig.positionClass]\">\n            <div toastComp *ngFor=\"let toast of toasts\" class=\"toast\" [toast]=\"toast\"\n                [@toastState]=\"toasterconfig.animation\"\n                [iconClass]=\"toasterconfig.iconClasses[toast.type]\"\n                [titleClass]=\"toasterconfig.titleClass\"\n                [messageClass]=\"toasterconfig.messageClass\"\n                [ngClass]=\"toasterconfig.typeClasses[toast.type]\"\n                (click)=\"click(toast)\" (clickEvent)=\"childClick($event)\"\n                (mouseover)=\"stopTimer(toast)\" (mouseout)=\"restartTimer(toast)\">\n            </div>\n        </div>\n        ",
                animations: [
                    animations.trigger('toastState', [
                        animations.state('flyRight, flyLeft, slideDown, slideUp, fade', animations.style({ opacity: 1, transform: 'translate(0,0)' })),
                        animations.transition('void => flyRight', [
                            animations.style({
                                opacity: 0, transform: 'translateX(100%)'
                            }),
                            animations.animate('0.25s ease-in')
                        ]),
                        animations.transition('flyRight => void', [
                            animations.animate('0.25s 10ms ease-out', animations.style({
                                opacity: 0, transform: 'translateX(100%)'
                            }))
                        ]),
                        animations.transition('void => flyLeft', [
                            animations.style({
                                opacity: 0, transform: 'translateX(-100%)'
                            }),
                            animations.animate('0.25s ease-in')
                        ]),
                        animations.transition('flyLeft => void', [
                            animations.animate('0.25s 10ms ease-out', animations.style({
                                opacity: 0, transform: 'translateX(-100%)'
                            }))
                        ]),
                        animations.transition('void => slideDown', [
                            animations.style({
                                opacity: 0, transform: 'translateY(-200%)'
                            }),
                            animations.animate('0.3s ease-in')
                        ]),
                        animations.transition('slideDown => void', [
                            animations.animate('0.3s 10ms ease-out', animations.style({
                                opacity: 0, transform: 'translateY(200%)'
                            }))
                        ]),
                        animations.transition('void => slideUp', [
                            animations.style({
                                opacity: 0, transform: 'translateY(200%)'
                            }),
                            animations.animate('0.3s ease-in')
                        ]),
                        animations.transition('slideUp => void', [
                            animations.animate('0.3s 10ms ease-out', animations.style({
                                opacity: 0, transform: 'translateY(-200%)'
                            }))
                        ]),
                        animations.transition('void => fade', [
                            animations.style({
                                opacity: 0
                            }),
                            animations.animate('0.3s ease-in')
                        ]),
                        animations.transition('fade => void', [
                            animations.animate('0.3s 10ms ease-out', animations.style({
                                opacity: 0
                            }))
                        ])
                    ]),
                ]
            }]
    }], function () { return [{ type: ToasterService }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }]; }, { toasterconfig: [{
            type: core.Input
        }] }); })();
    return ToasterContainerComponent;
}());

var __decorate$3 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var ToasterModule = /** @class */ (function () {
    function ToasterModule() {
    }
    ToasterModule_1 = ToasterModule;
    ToasterModule.forRoot = function () {
        return {
            ngModule: ToasterModule_1,
            providers: [ToasterService, ToasterContainerComponent]
        };
    };
    ToasterModule.forChild = function () {
        return {
            ngModule: ToasterModule_1,
            providers: [ToasterContainerComponent]
        };
    };
    var ToasterModule_1;
ToasterModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ToasterModule });
ToasterModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ToasterModule_Factory(t) { return new (t || ToasterModule)(); }, imports: [[common.CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ToasterModule, { declarations: [ToastComponent,
        ToasterContainerComponent], imports: [ɵngcc2.CommonModule], exports: [ToasterContainerComponent,
        ToastComponent] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ToasterModule, [{
        type: core.NgModule,
        args: [{
                imports: [common.CommonModule],
                declarations: [
                    ToastComponent,
                    ToasterContainerComponent
                ],
                exports: [
                    ToasterContainerComponent,
                    ToastComponent
                ]
            }]
    }], function () { return []; }, null); })();
    return ToasterModule;
}());

exports.ToastComponent = ToastComponent;
exports.ToasterContainerComponent = ToasterContainerComponent;
exports.ToasterService = ToasterService;
exports.ToasterConfig = ToasterConfig;
exports.ToasterModule = ToasterModule;

Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,