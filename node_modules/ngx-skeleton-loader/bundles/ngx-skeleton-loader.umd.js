(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(require('@angular/core'),require('@angular/common'),exports, require('@angular/core'), require('@angular/common')) :
    typeof define === 'function' && define.amd ? define('ngx-skeleton-loader', ['@angular/core','@angular/common','exports', '@angular/core', '@angular/common'], factory) :
    (global = global || self, factory(global.ng.core,global.ng.common,global['ngx-skeleton-loader'] = {}, global.ng.core, global.ng.common));
}(this, (function (ɵngcc0,ɵngcc1,exports, core, common) { 
var _c0 = function (a0, a1, a2, a3) { return { circle: a0, progress: a1, "progress-dark": a2, pulse: a3 }; };
function NgxSkeletonLoaderComponent_span_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 1);
} if (rf & 2) {
    var ctx_r66 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction4(2, _c0, ctx_r66.appearance === "circle", ctx_r66.animation === "progress", ctx_r66.animation === "progress-dark", ctx_r66.animation === "pulse"))("ngStyle", ctx_r66.theme);
} }
'use strict';

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/ngx-skeleton-loader.component.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var NgxSkeletonLoaderComponent = /** @class */ (function () {
        function NgxSkeletonLoaderComponent() {
            this.count = 1;
            this.appearance = '';
            this.animation = 'progress';
            this.theme = {};
            this.items = [];
        }
        /**
         * @return {?}
         */
        NgxSkeletonLoaderComponent.prototype.ngOnInit = /**
         * @return {?}
         */
        function () {
            this.items.length = this.count;
            /** @type {?} */
            var allowedAnimations = ['progress', 'progress-dark', 'pulse', 'false'];
            if (!allowedAnimations.includes(this.animation)) {
                // Shows error message only in Development
                if (core.isDevMode()) {
                    console.error("`NgxSkeletonLoaderComponent` need to receive 'animation' as: " + allowedAnimations.join(', ') + ". Forcing default to \"progress\".");
                }
                this.animation = 'progress';
            }
        };
        NgxSkeletonLoaderComponent.propDecorators = {
            count: [{ type: core.Input }],
            appearance: [{ type: core.Input }],
            animation: [{ type: core.Input }],
            theme: [{ type: core.Input }]
        };
NgxSkeletonLoaderComponent.ɵfac = function NgxSkeletonLoaderComponent_Factory(t) { return new (t || NgxSkeletonLoaderComponent)(); };
NgxSkeletonLoaderComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgxSkeletonLoaderComponent, selectors: [["ngx-skeleton-loader"]], inputs: { count: "count", appearance: "appearance", animation: "animation", theme: "theme" }, decls: 1, vars: 1, consts: [["class", "loader", "aria-busy", "true", "aria-valuemin", "0", "aria-valuemax", "100", "aria-valuetext", "Loading...", "role", "progressbar", "tabindex", "0", 3, "ngClass", "ngStyle", 4, "ngFor", "ngForOf"], ["aria-busy", "true", "aria-valuemin", "0", "aria-valuemax", "100", "aria-valuetext", "Loading...", "role", "progressbar", "tabindex", "0", 1, "loader", 3, "ngClass", "ngStyle"]], template: function NgxSkeletonLoaderComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, NgxSkeletonLoaderComponent_span_0_Template, 1, 7, "span", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngForOf", ctx.items);
    } }, directives: [ɵngcc1.NgForOf, ɵngcc1.NgClass, ɵngcc1.NgStyle], styles: [".loader[_ngcontent-%COMP%]{box-sizing:border-box;overflow:hidden;position:relative;background:no-repeat #eff1f6;border-radius:4px;width:100%;height:20px;display:inline-block;margin-bottom:10px;will-change:transform}.loader[_ngcontent-%COMP%]:after, .loader[_ngcontent-%COMP%]:before{box-sizing:border-box}.loader.circle[_ngcontent-%COMP%]{width:40px;height:40px;margin:5px;border-radius:50%}.loader.progress[_ngcontent-%COMP%], .loader.progress-dark[_ngcontent-%COMP%]{-webkit-animation:2s ease-in-out infinite progress;animation:2s ease-in-out infinite progress;background-size:200px 100%}.loader.progress[_ngcontent-%COMP%]{background-image:linear-gradient(90deg,rgba(255,255,255,0),rgba(255,255,255,.6),rgba(255,255,255,0))}.loader.progress-dark[_ngcontent-%COMP%]{background-image:linear-gradient(90deg,transparent,rgba(0,0,0,.2),transparent)}.loader.pulse[_ngcontent-%COMP%]{-webkit-animation:1.5s ease-in-out .5s infinite pulse;animation:1.5s ease-in-out .5s infinite pulse}@media (prefers-reduced-motion:reduce){.loader.progress[_ngcontent-%COMP%], .loader.progress-dark[_ngcontent-%COMP%], .loader.pulse[_ngcontent-%COMP%]{-webkit-animation:none;animation:none}.loader.progress[_ngcontent-%COMP%], .loader.progress-dark[_ngcontent-%COMP%]{background-image:none}}@-webkit-keyframes progress{0%{background-position:-200px 0}100%{background-position:calc(200px + 100%) 0}}@keyframes progress{0%{background-position:-200px 0}100%{background-position:calc(200px + 100%) 0}}@-webkit-keyframes pulse{0%,100%{opacity:1}50%{opacity:.4}}@keyframes pulse{0%,100%{opacity:1}50%{opacity:.4}}"] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxSkeletonLoaderComponent, [{
        type: core.Component,
        args: [{
                selector: 'ngx-skeleton-loader',
                template: "<span\n  *ngFor=\"let item of items\"\n  class=\"loader\"\n  aria-busy=\"true\"\n  aria-valuemin=\"0\"\n  aria-valuemax=\"100\"\n  aria-valuetext=\"Loading...\"\n  role=\"progressbar\"\n  tabindex=\"0\"\n  [ngClass]=\"{\n    circle: appearance === 'circle',\n    progress: animation === 'progress',\n    'progress-dark': animation === 'progress-dark',\n    pulse: animation === 'pulse'\n  }\"\n  [ngStyle]=\"theme\"\n>\n</span>\n",
                styles: [".loader{box-sizing:border-box;overflow:hidden;position:relative;background:no-repeat #eff1f6;border-radius:4px;width:100%;height:20px;display:inline-block;margin-bottom:10px;will-change:transform}.loader:after,.loader:before{box-sizing:border-box}.loader.circle{width:40px;height:40px;margin:5px;border-radius:50%}.loader.progress,.loader.progress-dark{-webkit-animation:2s ease-in-out infinite progress;animation:2s ease-in-out infinite progress;background-size:200px 100%}.loader.progress{background-image:linear-gradient(90deg,rgba(255,255,255,0),rgba(255,255,255,.6),rgba(255,255,255,0))}.loader.progress-dark{background-image:linear-gradient(90deg,transparent,rgba(0,0,0,.2),transparent)}.loader.pulse{-webkit-animation:1.5s ease-in-out .5s infinite pulse;animation:1.5s ease-in-out .5s infinite pulse}@media (prefers-reduced-motion:reduce){.loader.progress,.loader.progress-dark,.loader.pulse{-webkit-animation:none;animation:none}.loader.progress,.loader.progress-dark{background-image:none}}@-webkit-keyframes progress{0%{background-position:-200px 0}100%{background-position:calc(200px + 100%) 0}}@keyframes progress{0%{background-position:-200px 0}100%{background-position:calc(200px + 100%) 0}}@-webkit-keyframes pulse{0%,100%{opacity:1}50%{opacity:.4}}@keyframes pulse{0%,100%{opacity:1}50%{opacity:.4}}"]
            }]
    }], function () { return []; }, { count: [{
            type: core.Input
        }], appearance: [{
            type: core.Input
        }], animation: [{
            type: core.Input
        }], theme: [{
            type: core.Input
        }] }); })();
        return NgxSkeletonLoaderComponent;
    }());
    if (false) {
        /** @type {?} */
        NgxSkeletonLoaderComponent.prototype.count;
        /** @type {?} */
        NgxSkeletonLoaderComponent.prototype.appearance;
        /** @type {?} */
        NgxSkeletonLoaderComponent.prototype.animation;
        /** @type {?} */
        NgxSkeletonLoaderComponent.prototype.theme;
        /** @type {?} */
        NgxSkeletonLoaderComponent.prototype.items;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/ngx-skeleton-loader.module.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var NgxSkeletonLoaderModule = /** @class */ (function () {
        function NgxSkeletonLoaderModule() {
        }
NgxSkeletonLoaderModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgxSkeletonLoaderModule });
NgxSkeletonLoaderModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgxSkeletonLoaderModule_Factory(t) { return new (t || NgxSkeletonLoaderModule)(); }, imports: [[common.CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxSkeletonLoaderModule, { declarations: [NgxSkeletonLoaderComponent], imports: [ɵngcc1.CommonModule], exports: [NgxSkeletonLoaderComponent] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxSkeletonLoaderModule, [{
        type: core.NgModule,
        args: [{
                declarations: [NgxSkeletonLoaderComponent],
                imports: [common.CommonModule],
                exports: [NgxSkeletonLoaderComponent]
            }]
    }], function () { return []; }, null); })();
        return NgxSkeletonLoaderModule;
    }());

    exports.NgxSkeletonLoaderComponent = NgxSkeletonLoaderComponent;
    exports.NgxSkeletonLoaderModule = NgxSkeletonLoaderModule;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=ngx-skeleton-loader.umd.js.map