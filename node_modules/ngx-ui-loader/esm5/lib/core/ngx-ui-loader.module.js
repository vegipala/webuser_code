import { __decorate } from "tslib";
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { NgxUiLoaderComponent } from './ngx-ui-loader.component';
import { NgxUiLoaderBlurredDirective } from './ngx-ui-loader-blurred.directive';
import { NGX_UI_LOADER_CONFIG_TOKEN } from './ngx-ui-loader-config.token';
import * as ɵngcc0 from '@angular/core';
var NgxUiLoaderModule = /** @class */ (function () {
    function NgxUiLoaderModule() {
    }
    NgxUiLoaderModule_1 = NgxUiLoaderModule;
    /**
     * forRoot
     * @returns A module with its provider dependencies
     */
    NgxUiLoaderModule.forRoot = function (ngxUiLoaderConfig) {
        return {
            ngModule: NgxUiLoaderModule_1,
            providers: [
                {
                    provide: NGX_UI_LOADER_CONFIG_TOKEN,
                    useValue: ngxUiLoaderConfig
                }
            ]
        };
    };
    var NgxUiLoaderModule_1;
NgxUiLoaderModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgxUiLoaderModule });
NgxUiLoaderModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgxUiLoaderModule_Factory(t) { return new (t || NgxUiLoaderModule)(); }, imports: [[CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxUiLoaderModule, { declarations: function () { return [NgxUiLoaderComponent, NgxUiLoaderBlurredDirective]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgxUiLoaderComponent, NgxUiLoaderBlurredDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxUiLoaderModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule],
                declarations: [NgxUiLoaderComponent, NgxUiLoaderBlurredDirective],
                exports: [NgxUiLoaderComponent, NgxUiLoaderBlurredDirective]
            }]
    }], function () { return []; }, null); })();
    return NgxUiLoaderModule;
}());
export { NgxUiLoaderModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LXVpLWxvYWRlci5tb2R1bGUuanMiLCJzb3VyY2VzIjpbIm5nOi9uZ3gtdWktbG9hZGVyL2xpYi9jb3JlL25neC11aS1sb2FkZXIubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsUUFBUSxFQUF1QixNQUFNLGVBQWUsQ0FBQztBQUM5RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFL0MsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDakUsT0FBTyxFQUFFLDJCQUEyQixFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFDaEYsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sOEJBQThCLENBQUM7O0FBUTFFO0lBQUE7SUFnQkEsQ0FBQzswQkFoQlksaUJBQWlCO0lBQzVCOzs7T0FHRztJQUNJLHlCQUFPLEdBQWQsVUFBZSxpQkFBb0M7UUFDakQsT0FBTztZQUNMLFFBQVEsRUFBRSxtQkFBaUI7WUFDM0IsU0FBUyxFQUFFO2dCQUNUO29CQUNFLE9BQU8sRUFBRSwwQkFBMEI7b0JBQ25DLFFBQVEsRUFBRSxpQkFBaUI7aUJBQzVCO2FBQ0Y7U0FDRixDQUFDO0lBQ0osQ0FBQzs0QkFFd0I7SUFqQmQsaUJBQWlCLDhDQUw3QixRQUFRLENBQUM7V0FDUixPQUFPLEVBQUUsQ0FBQyxZQUFZLENBQUMsY0FDdkIsWUFBWSxFQUFFLENBQUMsb0JBQW9CLEVBQUUsMkJBQTJCLENBQUMsY0FDakUsT0FBTyxFQUFFLENBQUMsb0JBQW9CLEVBQUU7Y0FBMkIsQ0FBQyxVQUM3RCxDQUFDLFFBQ1csaUJBQWlCLENBZ0I3Qjs7Ozs7Ozs7Z0RBQ0Q7SUFEQSx3QkFBQztDQUFBLEFBaEJELElBZ0JDO1NBaEJZLGlCQUFpQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlLCBNb2R1bGVXaXRoUHJvdmlkZXJzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuXG5pbXBvcnQgeyBOZ3hVaUxvYWRlckNvbXBvbmVudCB9IGZyb20gJy4vbmd4LXVpLWxvYWRlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgTmd4VWlMb2FkZXJCbHVycmVkRGlyZWN0aXZlIH0gZnJvbSAnLi9uZ3gtdWktbG9hZGVyLWJsdXJyZWQuZGlyZWN0aXZlJztcbmltcG9ydCB7IE5HWF9VSV9MT0FERVJfQ09ORklHX1RPS0VOIH0gZnJvbSAnLi9uZ3gtdWktbG9hZGVyLWNvbmZpZy50b2tlbic7XG5pbXBvcnQgeyBOZ3hVaUxvYWRlckNvbmZpZyB9IGZyb20gJy4uL3V0aWxzL2ludGVyZmFjZXMnO1xuXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlXSxcbiAgZGVjbGFyYXRpb25zOiBbTmd4VWlMb2FkZXJDb21wb25lbnQsIE5neFVpTG9hZGVyQmx1cnJlZERpcmVjdGl2ZV0sXG4gIGV4cG9ydHM6IFtOZ3hVaUxvYWRlckNvbXBvbmVudCwgTmd4VWlMb2FkZXJCbHVycmVkRGlyZWN0aXZlXVxufSlcbmV4cG9ydCBjbGFzcyBOZ3hVaUxvYWRlck1vZHVsZSB7XG4gIC8qKlxuICAgKiBmb3JSb290XG4gICAqIEByZXR1cm5zIEEgbW9kdWxlIHdpdGggaXRzIHByb3ZpZGVyIGRlcGVuZGVuY2llc1xuICAgKi9cbiAgc3RhdGljIGZvclJvb3Qobmd4VWlMb2FkZXJDb25maWc6IE5neFVpTG9hZGVyQ29uZmlnKTogTW9kdWxlV2l0aFByb3ZpZGVyczxOZ3hVaUxvYWRlck1vZHVsZT4ge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogTmd4VWlMb2FkZXJNb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAge1xuICAgICAgICAgIHByb3ZpZGU6IE5HWF9VSV9MT0FERVJfQ09ORklHX1RPS0VOLFxuICAgICAgICAgIHVzZVZhbHVlOiBuZ3hVaUxvYWRlckNvbmZpZ1xuICAgICAgICB9XG4gICAgICBdXG4gICAgfTtcbiAgfVxufVxuIl19